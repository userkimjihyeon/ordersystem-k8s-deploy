server:
  port: 8080

eureka:
  client:
    enabled: false

spring:
  config:
    activate:
      on-profile: prod
  application:
    name: ordering-service

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://${DB_HOST}:3306/ordermsa
    username: admin
    password: ${DB_PW}
    hikari:
      maximum-pool-size: 1

  redis:
    host: redis-service
    port: 6379

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MariaDBDialect
    generate-ddl: true
    hibernate:
      ddl-auto: create
    show_sql: true

  kafka:
    kafka-server: kafka-service:9092

  output:
    ansi:
      enabled: always

resilience4j:
  circuitbreaker:
    instances:
      # productServiceCircuit은 이름 변경 가능
      productServiceCircuit:
        failureRateThreshold: 40  # 40% 이상의 실패율이면 OPEN 상태로 변경
        slowCallRateThreshold: 40  # 40% 이상의 요청이 느리면 OPEN 상태로 변경
        slowCallDurationThreshold: 2s  # 2초 이상 걸리면 느린 호출로 간주
        waitDurationInOpenState: 10s  # OPEN 상태에서 10초 동안 차단 후 HALF-OPEN 상태로 변경
        permittedNumberOfCallsInHalfOpenState: 2  # HALF-OPEN 상태에서 2개 요청이 모두 성공하면 → CLOSED 상태로 변경
        slidingWindowSize: 5  # 최근 5개의 요청을 기준으로 실패율 계산
        slidingWindowType: COUNT_BASED  # 요청 개수를 기준으로 실패율을 계산하도록 설정
        minimumNumberOfCalls: 4  # 최소 정상적인 요청을 4번 실행된 이후 Circuit Breaker 활성화(OPEN 상태를 의미하는 건 아님)
        # 진짜로 잘못 보낸 요청의 경우에는 서킷 브레이커의 기준이 되지 않도록 예외 클래스 지정
        ignoreExceptions:
          - java.lang.IllegalArgumentException  # IllegalArgumentException 무시